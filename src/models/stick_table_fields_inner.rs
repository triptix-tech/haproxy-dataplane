/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Default, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct StickTableFieldsInner {
    #[serde(rename = "field", skip_serializing_if = "Option::is_none")]
    pub field: Option<Field>,
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<i32>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl StickTableFieldsInner {
    pub fn new() -> StickTableFieldsInner {
        StickTableFieldsInner {
            field: None,
            period: None,
            r#type: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Field {
    #[serde(rename = "server_id")]
    ServerId,
    #[serde(rename = "gpc0")]
    Gpc0,
    #[serde(rename = "gpc0_rate")]
    Gpc0Rate,
    #[serde(rename = "gpc1")]
    Gpc1,
    #[serde(rename = "gpc1_rate")]
    Gpc1Rate,
    #[serde(rename = "gpt0")]
    Gpt0,
    #[serde(rename = "conn_cnt")]
    ConnCnt,
    #[serde(rename = "conn_cur")]
    ConnCur,
    #[serde(rename = "conn_rate")]
    ConnRate,
    #[serde(rename = "sess_cnt")]
    SessCnt,
    #[serde(rename = "sess_rate")]
    SessRate,
    #[serde(rename = "http_req_cnt")]
    HttpReqCnt,
    #[serde(rename = "http_req_rate")]
    HttpReqRate,
    #[serde(rename = "http_err_cnt")]
    HttpErrCnt,
    #[serde(rename = "http_err_rate")]
    HttpErrRate,
    #[serde(rename = "bytes_in_cnt")]
    BytesInCnt,
    #[serde(rename = "bytes_in_rate")]
    BytesInRate,
    #[serde(rename = "bytes_out_cnt")]
    BytesOutCnt,
    #[serde(rename = "bytes_out_rate")]
    BytesOutRate,
}

impl Default for Field {
    fn default() -> Field {
        Self::ServerId
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "rate")]
    Rate,
    #[serde(rename = "counter")]
    Counter,
}

impl Default for Type {
    fn default() -> Type {
        Self::Rate
    }
}

