/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */

/// Ring : HAProxy ring configuration



#[derive(Default, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Ring {
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<Format>,
    #[serde(rename = "maxlen", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub maxlen: Option<Option<i32>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "size", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub size: Option<Option<i32>>,
    #[serde(rename = "timeout_connect", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub timeout_connect: Option<Option<i32>>,
    #[serde(rename = "timeout_server", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub timeout_server: Option<Option<i32>>,
}

impl Ring {
    /// HAProxy ring configuration
    pub fn new(name: String) -> Ring {
        Ring {
            description: None,
            format: None,
            maxlen: None,
            name,
            size: None,
            timeout_connect: None,
            timeout_server: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Format {
    #[serde(rename = "iso")]
    Iso,
    #[serde(rename = "local")]
    Local,
    #[serde(rename = "raw")]
    Raw,
    #[serde(rename = "rfc3164")]
    Rfc3164,
    #[serde(rename = "rfc5424")]
    Rfc5424,
    #[serde(rename = "short")]
    Short,
    #[serde(rename = "priority")]
    Priority,
    #[serde(rename = "timed")]
    Timed,
}

impl Default for Format {
    fn default() -> Format {
        Self::Iso
    }
}

