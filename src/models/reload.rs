/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */

/// Reload : HAProxy reload



#[derive(Default, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Reload {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "reload_timestamp", skip_serializing_if = "Option::is_none")]
    pub reload_timestamp: Option<i32>,
    #[serde(rename = "response", skip_serializing_if = "Option::is_none")]
    pub response: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
}

impl Reload {
    /// HAProxy reload
    pub fn new() -> Reload {
        Reload {
            id: None,
            reload_timestamp: None,
            response: None,
            status: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "in_progress")]
    InProgress,
    #[serde(rename = "succeeded")]
    Succeeded,
}

impl Default for Status {
    fn default() -> Status {
        Self::Failed
    }
}

