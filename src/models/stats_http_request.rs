/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct StatsHttpRequest {
    #[serde(rename = "cond", skip_serializing_if = "Option::is_none")]
    pub cond: Option<String>,
    #[serde(rename = "cond_test", skip_serializing_if = "Option::is_none")]
    pub cond_test: Option<String>,
    #[serde(rename = "realm", skip_serializing_if = "Option::is_none")]
    pub realm: Option<String>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl StatsHttpRequest {
    pub fn new(r#type: Type) -> StatsHttpRequest {
        StatsHttpRequest {
            cond: None,
            cond_test: None,
            realm: None,
            r#type,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "allow")]
    Allow,
    #[serde(rename = "deny")]
    Deny,
    #[serde(rename = "auth")]
    Auth,
}

impl Default for Type {
    fn default() -> Type {
        Self::Allow
    }
}

