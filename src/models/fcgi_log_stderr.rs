/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */

/// FcgiLogStderr : Enables logging of STDERR messages that the FastCGI application reports. It is an optional setting. By default, HAProxy Enterprise ignores STDERR messages.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct FcgiLogStderr {
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "facility", skip_serializing_if = "Option::is_none")]
    pub facility: Option<String>,
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<String>,
    #[serde(rename = "global", skip_serializing_if = "Option::is_none")]
    pub global: Option<bool>,
    #[serde(rename = "len", skip_serializing_if = "Option::is_none")]
    pub len: Option<i32>,
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<String>,
    #[serde(rename = "minlevel", skip_serializing_if = "Option::is_none")]
    pub minlevel: Option<String>,
    #[serde(rename = "sample", skip_serializing_if = "Option::is_none")]
    pub sample: Option<Box<crate::models::Sample>>,
}

impl FcgiLogStderr {
    /// Enables logging of STDERR messages that the FastCGI application reports. It is an optional setting. By default, HAProxy Enterprise ignores STDERR messages.
    pub fn new() -> FcgiLogStderr {
        FcgiLogStderr {
            address: None,
            facility: None,
            format: None,
            global: None,
            len: None,
            level: None,
            minlevel: None,
            sample: None,
        }
    }
}


