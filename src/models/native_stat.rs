/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */

/// NativeStat : Current stats for one object.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct NativeStat {
    #[serde(rename = "backend_name", skip_serializing_if = "Option::is_none")]
    pub backend_name: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "stats", skip_serializing_if = "Option::is_none")]
    pub stats: Option<Box<crate::models::NativeStatStats>>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Type>,
}

impl NativeStat {
    /// Current stats for one object.
    pub fn new() -> NativeStat {
        NativeStat {
            backend_name: None,
            name: None,
            stats: None,
            r#type: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "backend")]
    Backend,
    #[serde(rename = "server")]
    Server,
    #[serde(rename = "frontend")]
    Frontend,
}

impl Default for Type {
    fn default() -> Type {
        Self::Backend
    }
}

