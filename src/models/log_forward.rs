/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */

/// LogForward : HAProxy log forward configuration



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct LogForward {
    #[serde(rename = "backlog", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub backlog: Option<Option<i32>>,
    #[serde(rename = "maxconn", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub maxconn: Option<Option<i32>>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "timeout_client", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub timeout_client: Option<Option<i32>>,
}

impl LogForward {
    /// HAProxy log forward configuration
    pub fn new(name: String) -> LogForward {
        LogForward {
            backlog: None,
            maxconn: None,
            name,
            timeout_client: None,
        }
    }
}


