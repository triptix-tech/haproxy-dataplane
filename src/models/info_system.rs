/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Default, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct InfoSystem {
    #[serde(rename = "cpu_info", skip_serializing_if = "Option::is_none")]
    pub cpu_info: Option<Box<crate::models::InfoSystemCpuInfo>>,
    /// Hostname where the HAProxy is running
    #[serde(rename = "hostname", skip_serializing_if = "Option::is_none")]
    pub hostname: Option<String>,
    #[serde(rename = "mem_info", skip_serializing_if = "Option::is_none")]
    pub mem_info: Option<Box<crate::models::InfoSystemMemInfo>>,
    /// OS string
    #[serde(rename = "os_string", skip_serializing_if = "Option::is_none")]
    pub os_string: Option<String>,
    /// Current time in milliseconds since Epoch.
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<i32>,
    /// System uptime
    #[serde(rename = "uptime", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub uptime: Option<Option<i32>>,
}

impl InfoSystem {
    pub fn new() -> InfoSystem {
        InfoSystem {
            cpu_info: None,
            hostname: None,
            mem_info: None,
            os_string: None,
            time: None,
            uptime: None,
        }
    }
}


