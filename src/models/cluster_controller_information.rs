/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Default, Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClusterControllerInformation {
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "api_base_path", skip_serializing_if = "Option::is_none")]
    pub api_base_path: Option<String>,
    #[serde(rename = "cluster_id", skip_serializing_if = "Option::is_none")]
    pub cluster_id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "log_targets", skip_serializing_if = "Option::is_none")]
    pub log_targets: Option<Vec<crate::models::ClusterControllerInformationLogTargetsInner>>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "port", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub port: Option<Option<i32>>,
}

impl ClusterControllerInformation {
    pub fn new() -> ClusterControllerInformation {
        ClusterControllerInformation {
            address: None,
            api_base_path: None,
            cluster_id: None,
            description: None,
            log_targets: None,
            name: None,
            port: None,
        }
    }
}


