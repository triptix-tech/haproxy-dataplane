/*
 * HAProxy Data Plane API
 *
 * API for editing and managing haproxy instances. Provides process information, configuration management, haproxy stats and logs. 
 *
 * The version of the OpenAPI document: 2.9
 * Contact: support@haproxy.com
 * Generated by: https://openapi-generator.tech
 */

/// Program : HAProxy program configuration



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Program {
    /// The command to be run, with flags and options.
    #[serde(rename = "command")]
    pub command: String,
    /// The group to run the command as, if different than the HAProxy group.
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    /// HAProxy stops and recreates child programs at reload.
    #[serde(rename = "start-on-reload", skip_serializing_if = "Option::is_none")]
    pub start_on_reload: Option<StartOnReload>,
    /// The user to run the command as, if different than the HAProxy user.
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
}

impl Program {
    /// HAProxy program configuration
    pub fn new(command: String, name: String) -> Program {
        Program {
            command,
            group: None,
            name,
            start_on_reload: None,
            user: None,
        }
    }
}

/// HAProxy stops and recreates child programs at reload.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StartOnReload {
    #[serde(rename = "enabled")]
    Enabled,
    #[serde(rename = "disabled")]
    Disabled,
}

impl Default for StartOnReload {
    fn default() -> StartOnReload {
        Self::Enabled
    }
}

